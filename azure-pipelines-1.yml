# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: myagent

steps:
- bash: ls /home/azureuser
- script: |
     chmod 777  /home/azureuser/don.sh
     ./home/azureuser/don.sh






# - task: Maven@4
#   inputs:
#     mavenPomFile: 'pom.xml'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.8'
#     mavenVersionOption: 'Default'
#     mavenAuthenticateFeed: false
#     effectivePomSkip: false
#     sonarQubeRunAnalysis: false
# - task: CopyFiles@2
#   inputs:
#     Contents: '**'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'
# - task: PublishBuildArtifacts@1
#   inputs:
#      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#      ArtifactName: 'drop'
#      publishLocation: 'Container'


# # - task: DownloadBuildArtifacts@1
# #   inputs:
# #     buildType: 'current'
# #     downloadType: 'single'
# #     artifactName: 'drop'
# #     downloadPath: '$(System.ArtifactsDirectory)'
# - task: Docker@2
#   inputs:
#     containerRegistry: 'Service connection ACR'
#     repository: 'agsgd/azuredevops'
#     command: 'build'
#     Dockerfile: '**/Dockerfile'
# - task: Docker@2
# - task: Ansible@0
#   inputs:
#     ansibleInterface: 'remoteMachine'
#     connectionOverSsh: 'ansible connection'
#     playbookSourceRemoteMachine: 'ansibleMachine'
#     playbookPathAnsibleMachineOnRemoteMachine: '/home/ubuntu/she.yaml'
#     inventoriesRemoteMachine: 'noInventory'
#   inputs:
#     containerRegistry: 'Service connection ACR'
#     repository: 'agsgd/azuredevops'
#     command: 'push'
